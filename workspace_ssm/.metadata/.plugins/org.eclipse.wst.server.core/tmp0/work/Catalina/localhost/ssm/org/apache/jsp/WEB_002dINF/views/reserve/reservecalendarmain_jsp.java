/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-04-12 06:48:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.reserve;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reservecalendarmain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/D:/workspace_ssm/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ssm/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/workspace_ssm/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ssm/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1711624598000L));
    _jspx_dependants.put("jar:file:/D:/workspace_ssm/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ssm/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/ssm/resources/js/jquery-3.7.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link href=\"/ssm/resources/js/fullcalendar-5.0.1/lib/main.css\" 	rel=\"stylesheet\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"/ssm/resources/js/fullcalendar-5.0.1/lib/main.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/ssm/resources/js/fullcalendar-5.0.1/lib/locales/ko.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/ssm/resources/css/jquery-ui-themes-1.13.2/themes/base/jquery-ui.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"/ssm/resources/css/jquery-ui-1.13.2/jquery-ui.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/common/main.css\" />\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("#contents {\r\n");
      out.write("	/* padding-top: 150px; */\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	width: 650px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#calendar {\r\n");
      out.write("	/* max-width: 1100px; */\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("section .inner-section {\r\n");
      out.write("	/* padding: 140px 0 0 0; */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#form-div {\r\n");
      out.write("	background-color: '';\r\n");
      out.write("	padding: 5px 5px 5px;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin-top: 5px;\r\n");
      out.write("	-moz-border-radius: 7px;\r\n");
      out.write("	-webkit-border-radius: 7px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* #dialog { font-size: 25px; } */\r\n");
      out.write("#dialog {\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#dialog h2 {\r\n");
      out.write("	font-size: larger;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#dialog div {\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#dialog div.bigger {\r\n");
      out.write("	font-size: 150%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".feedback-input {\r\n");
      out.write("	color: #3c3c3c;\r\n");
      out.write("	font-family: Helvetica, Arial, sans-serif;\r\n");
      out.write("	/* font-weight:400; */\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("	border-radius: 0;\r\n");
      out.write("	line-height: 12px;\r\n");
      out.write("	/* line-height: 22px; */\r\n");
      out.write("	background-color: #ffffff;\r\n");
      out.write("	/* padding: 3px 3px 3px 6px; */\r\n");
      out.write("	/* margin-bottom: 10px; */\r\n");
      out.write("	/* width:100%; */\r\n");
      out.write("	-webkit-box-sizing: border-box;\r\n");
      out.write("	-moz-box-sizing: border-box;\r\n");
      out.write("	-ms-box-sizing: border-box;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	/* border: 3px solid rgba(0,0,0,0); */\r\n");
      out.write("	border: 3px solid;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".feedback-input:focus {\r\n");
      out.write("	background: #fff;\r\n");
      out.write("	box-shadow: 0;\r\n");
      out.write("	border: 3px solid #3498db;\r\n");
      out.write("	border-color: #3498db;\r\n");
      out.write("	color: #3498db;\r\n");
      out.write("	/* outline: none; */\r\n");
      out.write("	/* padding: 13px 13px 13px 54px; */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".focused {\r\n");
      out.write("	color: #30aed6;\r\n");
      out.write("	border: #30aed6 solid 3px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input:hover, textarea:hover, input:focus, textarea:focus {\r\n");
      out.write("	background-color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#button-blue {\r\n");
      out.write("	font-family: 'Montserrat', Arial, Helvetica, sans-serif;\r\n");
      out.write("	float: left; /* 플롯 중요(::after 가상요소 이용)*/\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	border: #fbfbfb solid 4px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	/* background-color: #3498db; */\r\n");
      out.write("	color: white;\r\n");
      out.write("	font-size: 24px;\r\n");
      out.write("	padding-top: 22px;\r\n");
      out.write("	padding-bottom: 22px;\r\n");
      out.write("	-webkit-transition: all 0.3s;\r\n");
      out.write("	-moz-transition: all 0.3s;\r\n");
      out.write("	transition: all 0.3s;\r\n");
      out.write("	margin-top: -4px;\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#button-blue:hover {\r\n");
      out.write("	background-color: rgba(0, 0, 0, 0);\r\n");
      out.write("	color: #0493bd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ease {\r\n");
      out.write("	width: 0;\r\n");
      out.write("	height: 74px;\r\n");
      out.write("	background-color: #fbfbfb;\r\n");
      out.write("	-webkit-transition: .3s ease;\r\n");
      out.write("	-moz-transition: .3s ease;\r\n");
      out.write("	-o-transition: .3s ease;\r\n");
      out.write("	-ms-transition: .3s ease;\r\n");
      out.write("	transition: .3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".submit:hover .ease {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* .ui-icon-gripsmall-diagonal-se\r\n");
      out.write("{\r\n");
      out.write("	background-color:#fff!important;\r\n");
      out.write("	border-radius: 50%; -moz-border-radius: 50%; -webkit-border-radius: 50%; -khtml-border-radius: 50%;\r\n");
      out.write("	background-image:url('resize.png')!important;\r\n");
      out.write("	background-position:center center;\r\n");
      out.write("	background-size: cover!important;\r\n");
      out.write("	-ms-transform: scale(2);\r\n");
      out.write("	-webkit-transform: scale(2);\r\n");
      out.write("	transform: scale(2);\r\n");
      out.write("} */\r\n");
      out.write("\r\n");
      out.write("button.btn {\r\n");
      out.write("	display: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("section.sec2 .right-section section::after {\r\n");
      out.write("    content: \"\";\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 0;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    width: 0;\r\n");
      out.write("    height: 1px;\r\n");
      out.write("    background-color: grey;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(()=> {\r\n");
      out.write("		$(\"header\").css(\"position\", \"static\");	\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	var ctx = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	//var isAdm = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isAdm}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	var isAdm = 1;\r\n");
      out.write("	var edit = false;\r\n");
      out.write("	if (isAdm == 1) {\r\n");
      out.write("		edit = true;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	var diaLogOpt = {\r\n");
      out.write("		modal : true, ////모달대화상자\r\n");
      out.write("		resizable : false, ////크기 조절 못하게\r\n");
      out.write("		width : \"570\", // dialog 넓이 지정\r\n");
      out.write("		/* height: \"470\" */// dialog 높이 지정\r\n");
      out.write("		height : \"400\" // dialog 높이 지정\r\n");
      out.write("	};\r\n");
      out.write("\r\n");
      out.write("	//=========================================== function ===========================================\r\n");
      out.write("	//calFunc[s]ojbect create start\r\n");
      out.write("	var calFunc = {\r\n");
      out.write("		calcDate : function(arg, calendar) {\r\n");
      out.write("			var rObj = new Object();\r\n");
      out.write("\r\n");
      out.write("			var start = null;\r\n");
      out.write("			var end = null;\r\n");
      out.write("			var allDay = arg.allDay;\r\n");
      out.write("			var startDisp = null;\r\n");
      out.write("			var endDisp = null;\r\n");
      out.write("			var id = null;\r\n");
      out.write("			var xcontent = null;\r\n");
      out.write("			var title = null;\r\n");
      out.write("			//// 추가(2024.04.05)\r\n");
      out.write("			var groupId = null;\r\n");
      out.write("			var rsrvdate = null;   //// 2024.04.12 추가\r\n");
      out.write("			var rsrvname = null;\r\n");
      out.write("			var rsrvtelno = null;\r\n");
      out.write("			var rsrvtime = null;\r\n");
      out.write("			var rsrvinwon = null;\r\n");
      out.write("			var rsrvmemo = null;\r\n");
      out.write("			var writedate = null;\r\n");
      out.write("\r\n");
      out.write("			//============================== date get / set ============================\r\n");
      out.write("			//// 그룹id(2024.02.04)\r\n");
      out.write("			//evnet 값들\r\n");
      out.write("			if (arg.groupId != \"\" && arg.groupId != null\r\n");
      out.write("					&& arg.groupId != undefined) {\r\n");
      out.write("				groupId = arg.groupId;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			if (arg.id != \"\" && arg.id != null && arg.id != undefined) {\r\n");
      out.write("				id = arg.id;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			if (arg.title != \"\" && arg.title != null && arg.title != undefined) {\r\n");
      out.write("				title = arg.title;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			////console.log(\"custome : \" + JSON.stringify(arg.extendedProps));\r\n");
      out.write("\r\n");
      out.write("			//event외에 값들\r\n");
      out.write("			if (arg.extendedProps != undefined) {\r\n");
      out.write("				if (arg._def.extendedProps.xcontent != \"\"\r\n");
      out.write("						&& arg._def.extendedProps.xcontent != null\r\n");
      out.write("						&& arg._def.extendedProps.xcontent != undefined) {\r\n");
      out.write("					xcontent = arg._def.extendedProps.xcontent;\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				//// 예약일자 추가(2024.04.12)\r\n");
      out.write("				if (arg.extendedProps.rsrvdate != \"\"\r\n");
      out.write("					&& arg.extendedProps.rsrvdate != null\r\n");
      out.write("					&& arg.extendedProps.rsrvdate != undefined) {\r\n");
      out.write("					rsrvname = arg.extendedProps.rsrvdate;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				/// 추가(2024.04.05)\r\n");
      out.write("				//// 예약자명\r\n");
      out.write("				//console.log(\"예약자명2 : \" + arg.rsrvname);\r\n");
      out.write("				if (arg.extendedProps.rsrvname != \"\"\r\n");
      out.write("						&& arg.extendedProps.rsrvname != null\r\n");
      out.write("						&& arg.extendedProps.rsrvname != undefined) {\r\n");
      out.write("					rsrvname = arg.extendedProps.rsrvname;\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				//// 전화번호\r\n");
      out.write("				if (arg.extendedProps.rsrvtelno != \"\"\r\n");
      out.write("						&& arg.extendedProps.rsrvtelno != null\r\n");
      out.write("						&& arg.extendedProps.rsrvtelno != undefined) {\r\n");
      out.write("					rsrvtelno = arg.extendedProps.rsrvtelno;\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				//// 연락처\r\n");
      out.write("				if (arg.extendedProps.rsrvtelno != \"\"\r\n");
      out.write("						&& arg.extendedProps.rsrvtelno != null\r\n");
      out.write("						&& arg.extendedProps.rsrvtelno != undefined) {\r\n");
      out.write("					rsrvtelno = arg.extendedProps.rsrvtelno;\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				//// 예약시간\r\n");
      out.write("				if (arg.extendedProps.rsrvtime != \"\"\r\n");
      out.write("						&& arg.extendedProps.rsrvtime != null\r\n");
      out.write("						&& arg.extendedProps.rsrvtime != undefined) {\r\n");
      out.write("					rsrvtime = arg.extendedProps.rsrvtime;\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				//// 인원\r\n");
      out.write("				if (arg.extendedProps.rsrvinwon != \"\"\r\n");
      out.write("						&& arg.extendedProps.rsrvinwon != null\r\n");
      out.write("						&& arg.extendedProps.rsrvinwon != undefined) {\r\n");
      out.write("					rsrvinwon = arg.extendedProps.rsrvinwon;\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				//// 메모\r\n");
      out.write("				if (arg.extendedProps.rsrvmemo != \"\"\r\n");
      out.write("						&& arg.extendedProps.rsrvmemo != null\r\n");
      out.write("						&& arg.extendedProps.rsrvmemo != undefined) {\r\n");
      out.write("					rsrvmemo = arg.extendedProps.rsrvmemo;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				//console.log(\"cs : \" + arg.extendedProps.rsrvmemo);\r\n");
      out.write("				\r\n");
      out.write("				/// 작성일자\r\n");
      out.write("				if (arg.extendedProps.writedate != \"\"\r\n");
      out.write("						&& arg.extendedProps.writedate != null\r\n");
      out.write("						&& arg.extendedProps.writedate != undefined) {\r\n");
      out.write("					writedate = arg.extendedProps.writedate;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			if (allDay) { //// 하루종일이면\r\n");
      out.write("				var start = arg.start.toISOString().slice(0, 10); //returnCdate(calendar,arg.start);\r\n");
      out.write("\r\n");
      out.write("				var end = null;\r\n");
      out.write("				if (arg.end != \"\" && arg.end != null && arg.end != undefined) {\r\n");
      out.write("					end = arg.end.toISOString().slice(0, 10); //// 실제 데이터는 날짜를 하루 빼지 않는다 \r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				if (start == end) { //// 같은날이면 end날짜 없음\r\n");
      out.write("					end = null;\r\n");
      out.write("				}\r\n");
      out.write("				startDisp = start;\r\n");
      out.write("\r\n");
      out.write("				if (end != null) { //// 알릴 때만 날짜 하루 빼기\r\n");
      out.write("					endDisp = dateRel(arg.end.toISOString().slice(0, 10));\r\n");
      out.write("				}\r\n");
      out.write("			} else { //// 시간이 같이 들어오면\r\n");
      out.write("				start = arg.start.toISOString();\r\n");
      out.write("\r\n");
      out.write("				if (arg.end != \"\" && arg.end != null && arg.end != undefined) {\r\n");
      out.write("					end = arg.end.toISOString();\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				startDisp = returnCdate(calendar, arg.start);\r\n");
      out.write("\r\n");
      out.write("				if (end != null) {\r\n");
      out.write("					endDisp = returnCdate(calendar, arg.end);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			/////////////////////////////////////////////////////////\r\n");
      out.write("			/////////////////////////////////////////////////////////\r\n");
      out.write("			rObj.groupId = groupId; /* 2024.04.05 add */\r\n");
      out.write("			rObj.start = start;\r\n");
      out.write("			rObj.end = end;\r\n");
      out.write("			rObj.startDisp = startDisp;\r\n");
      out.write("			rObj.endDisp = endDisp;\r\n");
      out.write("			rObj.id = id;\r\n");
      out.write("			rObj.xcontent = xcontent;\r\n");
      out.write("			rObj.title = title;\r\n");
      out.write("\r\n");
      out.write("			/// add(2024.04.05)\r\n");
      out.write("			rObj.rsrvdate = rsrvdate;   //// 2024.04.12\r\n");
      out.write("			rObj.rsrvname = rsrvname;\r\n");
      out.write("			rObj.rsrvtelno = rsrvtelno;\r\n");
      out.write("			rObj.rsrvtime = rsrvtime;\r\n");
      out.write("			rObj.rsrvinwon = rsrvinwon;\r\n");
      out.write("			rObj.rsrvmemo = rsrvmemo;\r\n");
      out.write("			rObj.writedate = writedate;\r\n");
      out.write("\r\n");
      out.write("			//============================== date get / set ======================================\r\n");
      out.write("			return rObj;\r\n");
      out.write("		},\r\n");
      out.write("		//// 등록 초기\r\n");
      out.write("		setDateRangeView : function(xobj) {\r\n");
      out.write("\r\n");
      out.write("			var dispStr = xobj.startDisp;\r\n");
      out.write("\r\n");
      out.write("			if (xobj.endDisp != null) {\r\n");
      out.write("				dispStr += \" ~ \" + xobj.endDisp;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='actType']\").val(\"C\"); //// 등록\r\n");
      out.write("\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='id']\").val(xobj.id); //// user id\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='rsrvDate']\").val(xobj.rsrvdate); //// 예약일자\r\n");
      out.write("\r\n");
      out.write("		},\r\n");
      out.write("		//// form안에 name값을 $obj에 주입\r\n");
      out.write("		getFormValue : function() {\r\n");
      out.write("			var $dForm = $(\"form#diaForm\");\r\n");
      out.write("\r\n");
      out.write("			var $obj = new Object();\r\n");
      out.write("\r\n");
      out.write("			/////////////////////////////////////////////////////////////////////\r\n");
      out.write("			/// 변경 검토\r\n");
      out.write("			/////////////////////////////////////////////////////////////////////\r\n");
      out.write("			$(\"form#diaForm\")\r\n");
      out.write("					.find(\"input,textarea,select\")\r\n");
      out.write("					.not(\r\n");
      out.write("							\"input[name='actType'], input[name='id'], input[name='xwriteDate']\")\r\n");
      out.write("					.each(function() {\r\n");
      out.write("						var xval = $(this).val();\r\n");
      out.write("\r\n");
      out.write("						$obj[$(this).attr(\"name\")] = xval;\r\n");
      out.write("					});\r\n");
      out.write("\r\n");
      out.write("			return $obj;\r\n");
      out.write("		},\r\n");
      out.write("		//// 모든 태그 비활성화\r\n");
      out.write("		formDsbTrue : function() {\r\n");
      out.write("			$(\"form#diaForm\").find(\"input,textarea,select\").each(function() {\r\n");
      out.write("				$(this).attr(\"disabled\", true);\r\n");
      out.write("			});\r\n");
      out.write("		},\r\n");
      out.write("\r\n");
      out.write("		//// 모든 태그 활성화\r\n");
      out.write("		formDsbFalse : function() {\r\n");
      out.write("			$(\"form#diaForm\").find(\"input,textarea,select\").each(function() {\r\n");
      out.write("				$(this).attr(\"disabled\", false);\r\n");
      out.write("			});\r\n");
      out.write("		},\r\n");
      out.write("		//// 데이터 조회\r\n");
      out.write("		setDataForm : function(xobj) {\r\n");
      out.write("\r\n");
      out.write("			var dispStr = xobj.startDisp;\r\n");
      out.write("\r\n");
      out.write("			if (xobj.endDisp != null) {\r\n");
      out.write("				dispStr += \" ~ \" + xobj.endDisp;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='actType']\").val(\"U\"); //// 수정\r\n");
      out.write("\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='id']\").val(xobj.id); //// user id\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='rsrvNum']\").val(xobj.groupId); //// 번호 = groupId\r\n");
      out.write("			////$(\"form#diaForm\").find(\"input[name='rsrvDate']\").val(xobj.start); //// 예약일자 = start\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='rsrvDate']\").val(xobj.rsrvdate); //// 예약일자 = rsrvdate (2024.04.12 변경)\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='rsrvName']\").val(xobj.rsrvname); //// 예약자명\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='rsrvTelno']\").val(xobj.rsrvtelno); //// 연락처\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='rsrvTime']\").val(xobj.rsrvtime); //// 예약시간\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='rsrvInwon']\").val(xobj.rsrvinwon); //// 예약인원\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='rsrvSubject']\").val(xobj.title); //// 제목\r\n");
      out.write("			$(\"form#diaForm\").find(\"textarea[name='rsrvMemo']\").val(xobj.rsrvmemo);\r\n");
      out.write("			$(\"form#diaForm\").find(\"input[name='xwriteDate']\").val(xobj.writedate); /// 작성일자\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("	};\r\n");
      out.write("	//calFunc[e]---- ojbect create end\r\n");
      out.write("\r\n");
      out.write("	//////////////////////////////////////////////////\r\n");
      out.write("	//// 등록 액션\r\n");
      out.write("	//////////////////////////////////////////////////\r\n");
      out.write("	function createClnd(cal, xobj) {\r\n");
      out.write("		//if (!confirm(\"일정을 등록 하시겠습니까?\")) {\r\n");
      out.write("		//	return false;\r\n");
      out.write("		//}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	//////////////////////////////////////////////////\r\n");
      out.write("	//// 수정 액션\r\n");
      out.write("	//////////////////////////////////////////////////\r\n");
      out.write("	function updateClnd(cal, xobj, event) {\r\n");
      out.write("		//if (!confirm(\"해당 일정을 정말로 수정 하시겠습니까?\")) {\r\n");
      out.write("		//	if (event != undefined) {\r\n");
      out.write("		//		event.revert();\r\n");
      out.write("		//	}\r\n");
      out.write("		//	return false;\r\n");
      out.write("		//}\r\n");
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("	///////////////////////////////////////////////////\r\n");
      out.write("	/// 삭제 액션\r\n");
      out.write("	///////////////////////////////////////////////////\r\n");
      out.write("	function deleteClnd(cal, xobj) {\r\n");
      out.write("		//if (!confirm(\"해당일정을 정말로 삭제 하시겠습니까?\")) {\r\n");
      out.write("		//	return false;\r\n");
      out.write("		//}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	/// modal popu 화면 값 clear(2024.04.05)\r\n");
      out.write("	function funDiaFormClear() {\r\n");
      out.write("		$(\"#id\").val(\"\");\r\n");
      out.write("		$(\"#rsrvNum\").val(\"\"); //// 예약번호\r\n");
      out.write("		$(\"#rsrvDate\").val(\"\"); //// 예약일자  \r\n");
      out.write("		$(\"#rsrvName\").val(\"\"); //// 예약자명\r\n");
      out.write("		$(\"#rsrvTelno\").val(\"\"); //// 연락처\r\n");
      out.write("		$(\"#rsrvTime\").val(\"\"); //// 예약시간\r\n");
      out.write("		$(\"#rsrvInwon\").val(\"1\"); //// 인원(기본값 1)\r\n");
      out.write("		$(\"#rsrvSubject\").val(\"\"); //// 제목\r\n");
      out.write("		$(\"#rsrvMemo\").val(\"\"); //// 메모\r\n");
      out.write("		$(\"#xwriteDate\").val(\"\"); //// 작성일자\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	//=========================================== function =========================================== \r\n");
      out.write("\r\n");
      out.write("	//관리자만 ,주,일 옵션 뷰\r\n");
      out.write("	var rightm = \"\";\r\n");
      out.write("	rightm += ',listWeek'; /// 주일정 보이게 하기 위한 설정(2024.04.03 comment 처리)\r\n");
      out.write("\r\n");
      out.write("	////////////////////////////////////////////////////////\r\n");
      out.write("	//// 달력 생성 [s]\r\n");
      out.write("	////////////////////////////////////////////////////////\r\n");
      out.write("\r\n");
      out.write("	//////////////////////////////////////////////////////////////////\r\n");
      out.write("	//// DOMContentLoaded Event DOM Tree가 모두 로딩된 이후에 발생하는 이벤트\r\n");
      out.write("	//////////////////////////////////////////////////////////////////\r\n");
      out.write("	document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("\r\n");
      out.write("		var calendarEl = document.getElementById('calendar');\r\n");
      out.write("		\r\n");
      out.write("		var itemCountEl = document.getElementById('itemCount');\r\n");
      out.write("\r\n");
      out.write("		var calendar = new FullCalendar.Calendar(calendarEl, {\r\n");
      out.write("			headerToolbar : {\r\n");
      out.write("				left : 'prev,next today',\r\n");
      out.write("				center : 'title',\r\n");
      out.write("				right : ''\r\n");
      out.write("			},\r\n");
      out.write("			allDay : false,\r\n");
      out.write("			theme : false,\r\n");
      out.write("			//themeSystem : 'bootstrap',\r\n");
      out.write("			locale : 'ko',\r\n");
      out.write("			timeZone : 'Asia/Seoul',\r\n");
      out.write("			navLinks : false, //// can click day/week names to navigate views\r\n");
      out.write("			selectable : true,\r\n");
      out.write("			selectMirror : true,\r\n");
      out.write("			select : function(arg) {\r\n");
      out.write("\r\n");
      out.write("				calendar.unselect();\r\n");
      out.write("			},\r\n");
      out.write("			/////////////////////////////////////////////////////////////\r\n");
      out.write("			//// 클릭 함수 [s]\r\n");
      out.write("			/////////////////////////////////////////////////////////////\r\n");
      out.write("			eventClick : function(calEvent, jsEvent) {\r\n");
      out.write("\r\n");
      out.write("			},\r\n");
      out.write("			//// 클릭 함수 [e]\r\n");
      out.write("			editable : edit, //관리자 외 false\r\n");
      out.write("			eventOrder : \"displayOrder\", //// 일정을 sql 조회 순서로 적용\r\n");
      out.write("			dayMaxEvents : true, //// allow \"more\" link when too many events \r\n");
      out.write("			//// 새로운 이벤트 데이터가 필요할 때마다 이 함수를 호출 (데이터 조회)\r\n");
      out.write("			events : function(fetchInfo, successCallback, failureCallback) {\r\n");
      out.write("				var start = fetchInfo.start.toISOString().slice(0, 7);\r\n");
      out.write("				var end = fetchInfo.end.toISOString().slice(0, 7);\r\n");
      out.write("\r\n");
      out.write("				var start2 = fetchInfo.start.toISOString().slice(0, 10);\r\n");
      out.write("				var end2 = fetchInfo.end.toISOString().slice(0, 10);\r\n");
      out.write("				var param = \"\";\r\n");
      out.write("\r\n");
      out.write("				param += \"start=\" + start2;\r\n");
      out.write("				param += \"&end=\" + end2;\r\n");
      out.write("\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url : \"rsrvlist.do\",\r\n");
      out.write("					type : \"POST\",\r\n");
      out.write("					data : param\r\n");
      out.write("				}).done(function(data) {\r\n");
      out.write("					var result = jQuery.parseJSON(data);\r\n");
      out.write("\r\n");
      out.write("					//console.log(\"값 : \" + JSON.stringify(result));\r\n");
      out.write("\r\n");
      out.write("					successCallback(result.list);\r\n");
      out.write("\r\n");
      out.write("				}).fail(function(e) {\r\n");
      out.write("					alert(\"실패하였습니다.\" + e);\r\n");
      out.write("				}).always(function() {\r\n");
      out.write("					/////////////////////////////////////////////////////\r\n");
      out.write("					/////////////////////////////////////////////////////\r\n");
      out.write("				});\r\n");
      out.write("			},\r\n");
      out.write("			eventDrop : function(info) {\r\n");
      out.write("			},\r\n");
      out.write("			eventResize : function(info) {\r\n");
      out.write("			},\r\n");
      out.write("			eventTimeFormat : {\r\n");
      out.write("				hour : '2-digit',\r\n");
      out.write("				minute : '2-digit',\r\n");
      out.write("				hour12 : false\r\n");
      out.write("			},\r\n");
      out.write("		    datesRender: function(info) {\r\n");
      out.write("		        // 캘린더가 렌더링될 때 실행되는 함수\r\n");
      out.write("		        // 모든 일자 요소에 클릭 이벤트를 비활성화합니다.\r\n");
      out.write("		        disableDateClickEvents();\r\n");
      out.write("			},\r\n");
      out.write("		    dateClick: function(info) {\r\n");
      out.write("		        // 클릭된 일자를 처리하는 함수\r\n");
      out.write("		        // 기본 동작을 막습니다.\r\n");
      out.write("		        info.jsEvent.preventDefault(); // 기본 동작 방지\r\n");
      out.write("		      }\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		calendar.render();\r\n");
      out.write("\r\n");
      out.write("		function disableDateClickEvents() {\r\n");
      out.write("			    // FullCalendar에서 생성된 모든 일자 요소를 선택합니다.\r\n");
      out.write("			    var dayElements = document.querySelectorAll('.fc-day');\r\n");
      out.write("\r\n");
      out.write("			    // 각 일자 요소에 대해 클릭 이벤트를 비활성화합니다.\r\n");
      out.write("			    dayElements.forEach(function(dayElement) {\r\n");
      out.write("			      dayElement.addEventListener('click', function(event) {\r\n");
      out.write("			        event.stopPropagation(); // 이벤트 전파 중지\r\n");
      out.write("			        event.preventDefault(); // 기본 동작 방지\r\n");
      out.write("			      });\r\n");
      out.write("			    });\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	//////////////////////////////////////////////////////////////////\r\n");
      out.write("	//// 달력 생성 [e]-end\r\n");
      out.write("	//////////////////////////////////////////////////////////////////\r\n");
      out.write("\r\n");
      out.write("	//// 특정일자 하루전\r\n");
      out.write("	function dateRel(date) {\r\n");
      out.write("		var selectDate = date.split(\"-\");\r\n");
      out.write("		var changeDate = new Date();\r\n");
      out.write("\r\n");
      out.write("		changeDate.setFullYear(selectDate[0], selectDate[1] - 1,\r\n");
      out.write("				selectDate[2] - 1);\r\n");
      out.write("\r\n");
      out.write("		var y = changeDate.getFullYear();\r\n");
      out.write("		var m = changeDate.getMonth() + 1;\r\n");
      out.write("		var d = changeDate.getDate();\r\n");
      out.write("\r\n");
      out.write("		if (m < 10) {\r\n");
      out.write("			m = \"0\" + m;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		if (d < 10) {\r\n");
      out.write("			d = \"0\" + d;\r\n");
      out.write("		}\r\n");
      out.write("		var resultDate = y + \"-\" + m + \"-\" + d;\r\n");
      out.write("\r\n");
      out.write("		return resultDate;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function returnCdate(cal, time) {\r\n");
      out.write("		return cal.formatDate(time, {\r\n");
      out.write("			month : 'long',\r\n");
      out.write("			year : 'numeric',\r\n");
      out.write("			day : 'numeric',\r\n");
      out.write("			hour : 'numeric',\r\n");
      out.write("			minute : 'numeric',\r\n");
      out.write("			timeZone : 'Asia/Seoul',\r\n");
      out.write("			locale : 'ko'\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("<title>calendar3</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"section-container\">\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<section class=\"sec1\">\r\n");
      out.write("			<div class=\"inner-section\">\r\n");
      out.write("				<div id=\"contents\">\r\n");
      out.write("					<div id=\"dialog\" title=\"일정 관리\" style=\"display: none;\">\r\n");
      out.write("						<div id=\"form-div\">\r\n");
      out.write("							<form class=\"diaForm\" id=\"diaForm\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<input type=\"hidden\" name=\"actType\" value=\"C\" />\r\n");
      out.write("									<!-- C:등록 U:수정 D:삭제 -->\r\n");
      out.write("									<input type=\"hidden\" name=\"rsrvNum\" id=\"rsrvNum\" value=\"\" />\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"email\">\r\n");
      out.write("									<label for=\"rsrvDate\" style=\"width: 90px;\">예약일자</label> <input\r\n");
      out.write("										type=\"text\" name=\"rsrvDate\" id=\"rsrvDate\" readonly=\"readonly\" />\r\n");
      out.write("									<!-- <input type=\"text\" name=\"rsrvDate\" id=\"rsrvDate\" readonly=\"readonly\"/> -->\r\n");
      out.write("									<!-- <input type=\"text\" name=\"rsrvdate\" readonly=\"readonly\" class=\"validate[required,custom[email]] feedback-input\" placeholder=\"선택된날짜 및 시간\" /> -->\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"email\">\r\n");
      out.write("									<label for=\"rsrvName\" style=\"width: 90px;\">예약자명</label> <input\r\n");
      out.write("										type=\"text\" name=\"rsrvName\" id=\"rsrvName\">\r\n");
      out.write("									<!-- <input type=\"text\" name=\"rsrvName\" id=\"rsrvName\" class=\"validate[required,custom[email]] feedback-input\" /> -->\r\n");
      out.write("									<!-- <input type=\"text\" name=\"rsrvName\" id=\"rsrvName\" value=\"\" /> -->\r\n");
      out.write("									<!-- <input type=\"text\" name=\"rsrvName\" id=\"rsrvName\" placeholder=\"홍길동\" /> -->\r\n");
      out.write("									<!-- <input type=\"text\" name=\"rsrvdate\" readonly=\"readonly\" class=\"validate[required,custom[email]] feedback-input\" placeholder=\"선택된날짜 및 시간\" /> -->\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"email\">\r\n");
      out.write("									<label for=\"rsrvTelno\" style=\"width: 90px\">연락처</label> <input\r\n");
      out.write("										type=\"text\" name=\"rsrvTelno\" id=\"rsrvTelno\"\r\n");
      out.write("										placeholder=\"010-1234-5678\" />\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"email\">\r\n");
      out.write("									<label for=\"rsrvTime\" style=\"width: 90px;\">예약시간</label> <input\r\n");
      out.write("										type=\"text\"   name=\"rsrvTime\"   id=\"rsrvTime\"\r\n");
      out.write("										  placeholder=\"10:00\"   />\r\n");
      out.write("								</div>\r\n");
      out.write("								<div>\r\n");
      out.write("									<label for=\"rsrvInwon\" style=\"width: 90px\">인원</label> <input\r\n");
      out.write("										type=\"number\"   name=\"rsrvInwon\"   id=\"rsrvInwon\"   value=\"1\" />\r\n");
      out.write("								</div>\r\n");
      out.write("								<div>\r\n");
      out.write("									<label for=\"rsrvSubject\" style=\"width: 90px\">제목</label> <input\r\n");
      out.write("										type=\"text\" name=\"rsrvSubject\" id=\"rsrvSubject\" placeholder=\"\" />\r\n");
      out.write("									<!-- <input type=\"text\" name=\"rsrvSubject\" id=\"rsrvSubject\" placeholder=\"\"/> -->\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"text\">\r\n");
      out.write("									<label for=\"rsrvMemo\" style=\"width: 90px\">메모</label>\r\n");
      out.write("									<textarea name=\"rsrvMemo\" id=\"rsrvMemo\"></textarea>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div>\r\n");
      out.write("									<label for=\"xwriteDate\" style=\"width: 90px;\">작성일자</label>\r\n");
      out.write("									<!-- <input type=\"text\" name=\"xwriteDate\" id=\"xwriteDate\" style=\"border:none;\"/> -->\r\n");
      out.write("									<span type=\"text\" name=\"xwriteDate\" id=\"xwriteDate\"\r\n");
      out.write("										style=\"border: none;\"></span>\r\n");
      out.write("									<!-- <input type=\"text\" name=\"xwriteDate\" id=\"xwriteDate\"/> -->\r\n");
      out.write("									<!-- <input type=\"text\" name=\"xwriteDate\" id=\"xwriteDate\"/> -->\r\n");
      out.write("									<!-- <sapn type=\"text\" name=\"xwriteDate\" id=\"xwriteDate\"></sapn> -->\r\n");
      out.write("								</div>\r\n");
      out.write("							</form>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div id='calendar'></div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</section>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
