/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-04-11 10:30:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sidebar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("/* 노멀라이즈 시작 */\r\n");
      out.write("body, ul, li {\r\n");
      out.write("  margin: 0;\r\n");
      out.write("  padding: 0;\r\n");
      out.write("  list-style: none;   /* 해당 태그의 list-style을 none으로 하는 것으로 ●을 제거한다 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".side-bar a {\r\n");
      out.write("  color: inherit;   /* 부모 엘리먼트의 값을 물려받는다 */\r\n");
      out.write("  text-decoration: none;    /* 해당 태그의 text-decoration 속성을 none 값으로 하는 것으로 밑줄을 제거한다 */\r\n");
      out.write("}\r\n");
      out.write("/* 노멀라이즈 끝 */\r\n");
      out.write("\r\n");
      out.write("/* 커스텀 시작 */\r\n");
      out.write(".side-bar > ul ul {\r\n");
      out.write("  display: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 사이드바 시작 */\r\n");
      out.write("\r\n");
      out.write("/* 사이드바의 너비와 높이를 변수를 통해 통제 */\r\n");
      out.write(":root {\r\n");
      out.write("  --side-bar-width: 270px;\r\n");
      out.write("  --side-bar-height: 60vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".side-bar {\r\n");
      out.write("  position: fixed;    /* 스크롤을 따라오도록 지정 */\r\n");
      out.write("  background-color: rgba(237, 191, 104, 0.6);\r\n");
      out.write("  width: var(--side-bar-width);\r\n");
      out.write("  min-height: var(--side-bar-height);   /* 사이드바의 높이를 전체 화면 높이의 90%로 지정 */\r\n");
      out.write("  margin-top: calc((100vh - var(--side-bar-height)) / 2);    /* 사이드바 위와 아래의 마진을 동일하게 지정 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 아이콘 시작 */\r\n");
      out.write(".side-bar__icon-box {\r\n");
      out.write("  display: flex;\r\n");
      out.write("  justify-content: flex-end;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".side-bar__icon-1 {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  width: 23px;\r\n");
      out.write("  height: 17px;\r\n");
      out.write("  margin: 15px;\r\n");
      out.write("  margin-top: 20px;\r\n");
      out.write("  transition: .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(":root {\r\n");
      out.write("  --side-bar__icon: .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".side-bar__icon-1 > div {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  height: 20%;\r\n");
      out.write("  background-color: white;\r\n");
      out.write("  transition: all var(--side-bar__icon);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".side-bar__icon-1 > div:nth-of-type(1) {\r\n");
      out.write("  top: 0;\r\n");
      out.write("  width: auto;\r\n");
      out.write("  left: 0;\r\n");
      out.write("  right: 0;\r\n");
      out.write("  transition: all var(--side-bar__icon), left calc(var(--side-bar__icon) / 2) calc(var(--side-bar__icon) / 2), right calc(var(--side-bar__icon) / 2) calc(var(--side-bar__icon) / 2), height calc(var(--side-bar__icon) / 2) 0s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".side-bar__icon-1 > div:nth-of-type(2) {\r\n");
      out.write("  top: 40%;\r\n");
      out.write("  transform-origin:bottom left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".side-bar__icon-1 > div:nth-of-type(3) {\r\n");
      out.write("  top: 80%;\r\n");
      out.write("  left: auto;\r\n");
      out.write("  right: 0;\r\n");
      out.write("  transform-origin:bottom right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".side-bar:hover .side-bar__icon-1 {\r\n");
      out.write("  transform: translate(-198px, 0);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".side-bar:hover .side-bar__icon-1 > div:nth-of-type(2) {\r\n");
      out.write("  transform:rotate(45deg);\r\n");
      out.write("  width: 70.5%;\r\n");
      out.write("  height: 25%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".side-bar:hover .side-bar__icon-1 > div:nth-of-type(3) {\r\n");
      out.write("  top: 40%;\r\n");
      out.write("  transform:rotate(-45deg);\r\n");
      out.write("  width: 70.5%;\r\n");
      out.write("  height: 25%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".side-bar:hover .side-bar__icon-1 > div:nth-of-type(1) {\r\n");
      out.write("  left: 41%;\r\n");
      out.write("  right: 41%;\r\n");
      out.write("  height: 100%;\r\n");
      out.write("  transition: all var(--side-bar__icon), left calc(var(--side-bar__icon) / 2) 0s, right calc(var(--side-bar__icon) / 2) 0s, height calc(var(--side-bar__icon) / 2) calc(var(--side-bar__icon) / 2);\r\n");
      out.write("}\r\n");
      out.write("/* 아이콘 끝 */\r\n");
      out.write("\r\n");
      out.write("/* 모든 메뉴의 a에 속성값 부여 */\r\n");
      out.write(".side-bar ul > li > a {\r\n");
      out.write("  display: block;\r\n");
      out.write("  color: white;\r\n");
      out.write("  font-size: 1.4rem;\r\n");
      out.write("  font-weight: bold;\r\n");
      out.write("  padding-top: 20px;\r\n");
      out.write("  padding-bottom: 20px;\r\n");
      out.write("  padding-left: 50px;\r\n");
      out.write("  transition: .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 자식의 position이 absolute일 때 자식을 영역 안에 가두어 준다 */\r\n");
      out.write(".side-bar > ul > li {\r\n");
      out.write("  position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 모든 메뉴가 마우스 인식 시 반응 */\r\n");
      out.write(".side-bar ul > li:hover > a {\r\n");
      out.write("  background-color: #806a3724;\r\n");
      out.write("  border-bottom: 1px solid #dad100;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 1차 메뉴의 항목이 마우스 인식 시에 2차 메뉴 등장 */\r\n");
      out.write(".side-bar > ul > li:hover > ul {\r\n");
      out.write("  display: block;\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  background-color: rgba(237, 191, 104, 0.8);\r\n");
      out.write("  top: 0;         /* 2차 메뉴의 상단을 1차 메뉴의 상단에 고정 */\r\n");
      out.write("  left: 100%;     /* 2차 메뉴를 1차 메뉴의 너비만큼 이동 */\r\n");
      out.write("  width: 100%;    /* 1차 메뉴의 너비를 상속 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 사이드바 너비의 80%만큼 왼쪽으로 이동 */\r\n");
      out.write(".side-bar {\r\n");
      out.write("  border-radius: 20px;\r\n");
      out.write("  transform: translate(calc(var(--side-bar-width) * -0.8), 0);\r\n");
      out.write("  transition: .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 마우스 인식 시 원래의 위치로 이동 */\r\n");
      out.write(".side-bar:hover {\r\n");
      out.write("  transform: translate(-20px, 0);   /* 둥근 모서리의 너비만큼 숨겨주기 */\r\n");
      out.write("}\r\n");
      out.write("/* 사이드바 끝 */\r\n");
      out.write("\r\n");
      out.write("/* 커스텀 끝 */\r\n");
      out.write(".fa-cat::before {\r\n");
      out.write("	content: \"\";\r\n");
      out.write("}\r\n");
      out.write("aside.side-bar {\r\n");
      out.write("	z-index: 998;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<aside class=\"side-bar\">\r\n");
      out.write("  <section class=\"side-bar__icon-box\">\r\n");
      out.write("    <section class=\"side-bar__icon-1\">\r\n");
      out.write("      <div></div>\r\n");
      out.write("      <div></div>\r\n");
      out.write("      <div></div>\r\n");
      out.write("    </section>\r\n");
      out.write("  </section>\r\n");
      out.write("  <ul>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"#\"><i class=\"fa-solid fa-cat\"></i> 재고 관리</a>\r\n");
      out.write("      <ul>\r\n");
      out.write("      	<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/gmoveinsert.do?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">재고 등록</a></li>\r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/glist.do?page=1&id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">재고 현황</a></li>     \r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pmoveinsert.do?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">발주처 등록</a></li>\r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/plist.do?page=1&id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">발주처 현황</a></li>\r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/specify.do?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">발주 명세서</a></li>\r\n");
      out.write("        \r\n");
      out.write("      </ul>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"#\"><i class=\"fa-solid fa-cat\"></i> 직원 관리</a>\r\n");
      out.write("      <ul>\r\n");
      out.write("       <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/selectemp.do?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">직원 정보</a></li>\r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/selectSalary.do?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">직원 급여정보</a></li>\r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/commuteInfoPage.do?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">근태정보</a></li>\r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/QRController.do\">QR 페이지</a></li>\r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/recordTimePage.do\">QR 출퇴근페이지</a></li>     \r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendarPage.do?id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">직원 스케줄</a></li>\r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/kakaoM.do\">메시지</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"#\">예약 관리</a>\r\n");
      out.write("      <ul>\r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/moveRsrvCalPage.do\">예약정보관리</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"#\">회계 관리</a>\r\n");
      out.write("      <ul>\r\n");
      out.write("        \r\n");
      out.write("        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/account.do\">매출보기</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </li>\r\n");
      out.write("  </ul>\r\n");
      out.write("</aside>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
